/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    void helperfunction(TreeNode* root, string &preorder)
    {
        if(root==NULL)
        {
            preorder+="^";
            return;
        }
        preorder+=to_string(root->val);
        helperfunction(root->left,preorder);
        helperfunction(root->right,preorder);

    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        string preroot;
        string presubroot;
        helperfunction(root,preroot);
        helperfunction(subRoot,presubroot);
        size_t index=preroot.find(presubroot);
        if(index!=string::npos)
        return true;
        return false;
    }
};

class Solution {
public:
int solve(vector<int>& coins, int index,int amount,vector<vector<int>> &dp)
{
    if(index==0)
    {
    if(amount%coins[0]==0)
    return amount/coins[0];
    return 1e9;
    }
    if(dp[index][amount]!=-1)
    return dp[index][amount];
    int cantake=1e9;
    if(coins[index]<=amount)
    cantake=1+solve(coins,index,amount-coins[index],dp);
    int nottake=solve(coins,index-1,amount,dp);
    return dp[index][amount]=min(cantake,nottake);
}
    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<vector<int>> dp(n,vector<int>(amount+1,-1));
        int ans=solve(coins,n-1,amount,dp);
        if(ans<1e9)
        return ans;
        return -1;
        
    }
};

class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.size();
        int start=0;
        int res=1;
        vector<vector<int>> dp(n,vector<int>(n,0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<=n;j++)
            {
                if(i==j)
                dp[i][i]=1;
                if(j-i==1 and s[i]==s[j])
                {
                dp[i][j]=1;
                res=2;
                start=i;
                }
            }
            cout<<endl;
        }
        for(int k=3;k<=n;k++)
        {
            for(int i=0;i<n-k+1;i++)
            {
                int j=i+k-1;
                if(s[i]==s[j] && dp[i+1][j-1])
                {
                    dp[i][j]=1;
                    if(k>res)
                    {
                        res=k;
                        start=i;
                    }
                }
            }
        }
        return s.substr(start,res);
    }
};

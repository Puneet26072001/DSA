class Solution {
public:
void solve(int open,int close,string &s,vector<string> &res)
{
    if(open==0 and close==0)
    {
        res.push_back(s);
        return;
    }
    if(open>0)
    {
        s+='(';
        solve(open-1,close,s,res);
        s.pop_back();
    }
    if(close>0)
    {
        if(open<close)
        {
            s+=')';
            solve(open,close-1,s,res);
            s.pop_back();
        }
    }
}
    vector<string> generateParenthesis(int n) {
        vector<string> res;
        string p="";
        solve(n,n,p,res);
        return res;
    }
};

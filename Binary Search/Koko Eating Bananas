class Solution {
public:
int hourlytime(vector<int>& piles, int mid)
{
    int ans=0;
    for(int i=0;i<piles.size();i++)
    {
        double res=((double)piles[i]/(double)mid);
        ans+=ceil(res);
    }
    return ans;
}
    int minEatingSpeed(vector<int>& piles, int h) {
        int low=1;
        int high=*max_element(piles.begin(),piles.end());
        while(low<=high)
        {
            int mid=(low+high)/2;
            cout<<mid<<endl;
            if(hourlytime(piles,mid)>h)
            {
                low=mid+1;
            }
            else
            high=mid-1;
        }
        return low;
    }
};

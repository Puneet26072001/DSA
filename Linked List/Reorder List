/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
ListNode* reverse(ListNode* head)
{
    ListNode* cur=head;
        ListNode* prev=NULL;
        while(cur!=NULL)
        {
            ListNode* temp=cur->next;
            cur->next=prev;
            prev=cur;
            cur=temp;
        }
        return prev;
}
    void reorderList(ListNode* head) {
        ListNode* slow=head;
        ListNode* fast=head->next;
        while(fast!=NULL and fast->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode* second=slow->next;
        slow->next=NULL;
        ListNode* reversehead=reverse(second);
        ListNode* cur=head;
        while(reversehead!=NULL)
        {
            ListNode* temp=cur->next;
            ListNode* temp2=reversehead->next;
            cur->next=reversehead;
            reversehead->next=temp;
            cur=temp;
            reversehead=temp2;

        }

    }
};

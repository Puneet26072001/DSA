/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<pair<int,ListNode*>,vector<pair<int,ListNode*>>,greater<pair<int,ListNode*>>> pq;
        for(int i=0;i<lists.size();i++)
        {
            pq.push({lists[i]->val,lists[i]});
        }
        ListNode* headprev=new ListNode(-1);
        ListNode* cur=headprev;
        while(!pq.empty())
        {
            pair<int,ListNode*> it=pq.top();
            pq.pop();
            ListNode* temp=new ListNode(it.second->val);
            cur->next=temp;
            cur=temp;
            if(it.second->next!=NULL)
            pq.push({it.second->next->val,it.second->next});
        }
        return headprev->next;
    }
};

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* head1=list1;
        ListNode* head2=list2;
        ListNode* newHead=new ListNode();
        ListNode* curptr=newHead;
        while(head1!=NULL and head2!=NULL)
        {
            if(head1->val<head2->val)
            {
                ListNode* temp=new ListNode(head1->val);
                head1=head1->next;
                curptr->next=temp;
            }
            else{
                ListNode* temp=new ListNode(head2->val);
                head2=head2->next;
                curptr->next=temp;
            }
            curptr=curptr->next;
        }
        while(head1!=NULL)
        {
            ListNode* temp=new ListNode(head1->val);
            head1=head1->next;
            curptr->next=temp;
            curptr=curptr->next;
        }
        while(head2!=NULL)
        {
            ListNode* temp=new ListNode(head2->val);
            head2=head2->next;
            curptr->next=temp;
            curptr=curptr->next;
        }
        return newHead->next;
    }
};
